import "./globals.css";
import Navbar from "@/components/header/Navbar";
import Footer from "@/components/footer/Footer";
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { Locale, routing } from '@/i18n/routing';
import ReduxProvider from "@/provider/ReduxProvider";
// import { Directions, Languages } from "@/constants/enums";
import { cn } from "@/lib/utils";

// import { Locale } from "@/i18n.config";
import { Metadata } from "next";
import { Toaster } from "@/components/ui/toaster";
import GetSessionProvider from "@/provider/GetSessionProvider";


export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// export async function generateStaticParams() {
//   return [{ locale: 'en' }, { locale: 'ar' }]
// }

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {

  // Ensure that the incoming `locale` is valid
  const { locale } = await params
  if (!routing.locales.includes(locale as Locale)) {
    notFound();
  }

  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();
  return (
    <html lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'} className="h-full">
      <body
        className={cn('antialiased relative h-full ')}
      >
        <NextIntlClientProvider messages={messages}>
          <GetSessionProvider>
            <ReduxProvider>
              <main className="relative flex flex-col min-h-screen">
                <Navbar />
                <div className="flex-grow flex-1">
                  {children}
                </div>
                <Footer />
              </main>
              <Toaster />
            </ReduxProvider>
          </GetSessionProvider>
        </NextIntlClientProvider>
      </body>
    </html>

  );
}
